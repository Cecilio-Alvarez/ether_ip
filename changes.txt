-*- outline -*-

* 2002, 09/24 V1.8
Better handling of disconnects and re-connects for output
records.

Input records are usually scanned. They change when
the value of the PLC tag changes, they turn READ/INVALID
when the tag isn't found on the PLC or when the connection
to the PLC goes down.

For output records, this was meant to be similar:
Most of the time, the driver _reads_ the tags used in output records.
Only when the output record is processed, the driver _writes_ the tag
(in fact the whole array when the tag is part of an array).
Whenever the driver notices a difference between the tag's value
read from the PLC and the output record, it updates the record and
processes it.
What the driver didn't do: Update output records when the PLC
disconnects. Before, one would have to process the output record
(example: Enter new value on screen) and only then would the output
record change to INVALID/WRITE.

Now output records get reprocessed not only for value discrepancies
but also for missing values (disconnect).

* 2002, 08/15 V1.7
When you omit the call to 
     drvEtherIP_define_PLC  <plc>, <IP>, <slot>
the driver (actually device support) reports
"unknown PLC xxx".
This is an indication of a severe error in
either the EPICS database or vxWorks startup script:
All PLCs that you intend to use must be defined,
the driver cannot guess to what PLC you intend to talk.

Before V1.7, the driver used to run into follow-up errors
that suspended scan tasks which included analog input records
which tried to access that unknown PLC.

From V1.7 on, those AI records will just show
INVALID/READ severity and status but no longer
suspend the scan task.

Note: Omitting the call drvEtherIP_define_PLC
is still highly discouraged.
The fix is just a little nicer than the previous
behavior.

* 2002, 06/26 V1.6
This part is not new but just a description
of current behavior of AI, AO records:
When attached to REAL (float) tags,
they read & write the (floating point) VAL fields.
For INT, DINT, ... tags they use the RVAL fields.

RVAL is a signed long,
all INT, DINT tags of the PLC are signed,
but for some reason I happened to transfer them
as "unsigned".
New: I now use signed values.

* 2002, 05/09
Log message for "EIP: Cannot read tag"
didn't show the tag but garbage.

* 2002, 04/30 V1.5
SCAN="I/O Intr" was broken.

* 2002, 03/15 V1.4
Hopefully fixed a problem that occurs when device requests write while
driver is in the middle of a read (used to look as if the PLC didn't
get the write)

* 2002, 02-19 V1.3

** Added "FORCE" option to output records
Per default, output records scan when they are
not writing a new value.
If they notice that the PLC has a different value
for the tag, teh record will adapt the tag's value.

With the new force option, the output record will
try to re-write until the PLC tag matches the
value of the record.

* 2001, 10-01 V1.2

** New driver option "drvEtherIP_default_rate"

* 2001, 08-30 (not versioned)

** Patch to output records
Output records are for writing to the PLC.
But most of the time they are readong from the PLC
and if there is a difference between the record's value
and the PLC tag, the record is updated and processed.

New: This will now happen if the record is UDF.
Before, a record would start as UDF, value 0,
and unless the tag happened to be !=0, the record
stayed UDF. Now the record will be updated/initialized
after e.g. a reboot with the tag value.

* 2001, 06-19    V1.1

** New "B <bit>" flag:
Allows connection of binary records to non-BOOL arrays like INT, DINT.
With B <bit> flag, the array element is used as is
(no longer interpreted as a bit element) and the bit within the INT
or DINT is selected via the new flag:

   INP="@plc1 DINTs[40]"
still results in reading bit 40, that is bit 8 in the second
DINT.

Now this can be written as
   INP="@plc1 DINTs[1] B 8"

A lot of ether_ipApp/doc/readme.txt, the "manual", has been rewritten.


* 2001, 05-18    V1.0

** New "slot" parameter: drvEtherIP_define_PLC <name>, <ip_addr>, <slot>

Before, the driver assumed that the PLC would be in slot 0,
the left-most slot of the ControlLogix crate.

Now you can put it anywhere (in the crate),
but if it's not slot 0, you have to specify that
when you define the PLC.

** Some changes to output of drvEtherIP_report
Now displaying the PLC interface info, e.g.:
  Interface name        : 1756-ENET/A 
  Interface vendor      : 0x100
  Interface type        : 0xC00
  Interface revision    : 0x112
  Interface serial      : 0x13D40700


